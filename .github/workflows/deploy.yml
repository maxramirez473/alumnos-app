name: � Create Release Version

# Ejecutar solo en push a main y cuando los tests pasen
on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["🧪 Laravel Testing Suite"]
    types: [completed]
    branches: [ main ]

jobs:
  # Job para crear release automático
  release:
    # Solo ejecutar si los tests pasaron
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    runs-on: ubuntu-latest
    name: 📦 Create Release
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Necesario para obtener todos los tags

    - name: 🐘 Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, sqlite3

    - name: 📊 Generate Demo Statistics
      run: |
        echo "📈 Generando estadísticas de la aplicación demo..."
        
        # Contar archivos de código
        PHP_FILES=$(find . -name "*.php" -not -path "./vendor/*" | wc -l)
        TEST_FILES=$(find ./tests -name "*.php" | wc -l)
        CONTROLLERS=$(find ./app/Http/Controllers -name "*.php" | wc -l)
        MODELS=$(find ./app/Models -name "*.php" | wc -l)
        
        # Contar líneas de código (aproximado)
        LINES_OF_CODE=$(find . -name "*.php" -not -path "./vendor/*" -exec wc -l {} + | tail -1 | awk '{print $1}')
        
        echo "🔍 ESTADÍSTICAS DE LA DEMO:"
        echo "- Archivos PHP: $PHP_FILES"
        echo "- Archivos de test: $TEST_FILES"
        echo "- Controladores: $CONTROLLERS"  
        echo "- Modelos: $MODELS"
        echo "- Líneas de código: ~$LINES_OF_CODE"
        echo ""
        
        # Crear archivo de estadísticas
        cat > demo-stats.md << EOF
        # 📊 Estadísticas de la Aplicación Demo
        
        ## 📈 Métricas de Código
        - **Archivos PHP**: $PHP_FILES
        - **Archivos de Test**: $TEST_FILES  
        - **Controladores**: $CONTROLLERS
        - **Modelos**: $MODELS
        - **Líneas de Código**: ~$LINES_OF_CODE
        
        ## 🧪 Cobertura de Testing
        - Tests Unitarios (Caja Blanca)
        - Tests de API (Caja Negra)
        - Tests de Integración
        - Tests End-to-End (E2E)
        - Tests de Seguridad
        
        ## 🏗️ Arquitectura
        - Laravel 11.x
        - PHP 8.2+
        - SQLite/MySQL
        - Bootstrap 5
        - GitHub Actions CI/CD
        
        Generado automáticamente el $(date)
        EOF

    - name: 📊 Generate Changelog
      id: changelog
      run: |
        # Obtener el último tag
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null)
        
        if [ -z "$LAST_TAG" ]; then
          echo "📝 No hay tags previos - generando changelog desde el primer commit"
          # Si no hay tags, obtener todos los commits
          CHANGELOG=$(git log --pretty=format:"- %s (%an)" --no-merges --max-count=20)
        else
          echo "📝 Último tag encontrado: $LAST_TAG"
          # Generar changelog desde el último tag
          CHANGELOG=$(git log $LAST_TAG..HEAD --pretty=format:"- %s (%an)" --no-merges)
        fi
        
        # Si no hay commits nuevos, mostrar mensaje por defecto
        if [ -z "$CHANGELOG" ]; then
          CHANGELOG="- Despliegue de mantenimiento (Sin cambios significativos)"
        fi
        
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: 📋 Upload Demo Statistics
      uses: actions/upload-artifact@v3
      with:
        name: demo-statistics-v${{ github.run_number }}
        path: demo-stats.md

    - name: 🏷️ Create Release
      if: github.ref == 'refs/heads/main'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: "📦 Demo Release v${{ github.run_number }}"
        body: |
          ## 🎯 Sistema de Gestión de Alumnos - Versión de Demostración
          
          ### 🚀 Cambios en esta versión:
          ${{ steps.changelog.outputs.changelog }}
          
          ### 🧪 Estado de Testing:
          - ✅ Tests unitarios (Caja Blanca): Pasaron
          - ✅ Tests de API (Caja Negra): Pasaron  
          - ✅ Tests de integración: Pasaron
          - ✅ Tests de comportamiento (E2E): Pasaron
          - ✅ Tests de seguridad: Pasaron
          
          ### 📋 Funcionalidades incluidas:
          - 👥 Gestión completa de alumnos
          - 🏫 Administración de grupos
          - 📊 Reportes y búsquedas
          - 🔐 Sistema de autenticación
          - 📡 API REST completa
          - 🧪 Suite de testing integral
          
          ### 🔗 Enlaces útiles:
          - [📂 Ver todos los commits](https://github.com/${{ github.repository }}/commits/main)
          - [🧪 Ver suite de testing](https://github.com/${{ github.repository }}/tree/main/tests)
          - [📖 Documentación](https://github.com/${{ github.repository }}/blob/main/README.md)
          
          ### 💻 Para desarrolladores:
          ```bash
          git clone https://github.com/${{ github.repository }}.git
          cd alumnos-app
          composer install
          php artisan migrate --seed
          php artisan test
          ```
          
          ---
          🎓 **Aplicación de demostración educativa - No desplegada en producción**
        draft: false
        prerelease: false
